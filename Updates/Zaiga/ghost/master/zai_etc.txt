//******************************************************************************
// YAYA　ゴーストテンプレート
// 種々のイベント辞書
//******************************************************************************

//******************************************************************************
//シェル切り替え
//******************************************************************************

//------------------------------------------------------------------------------
//シェルチェンジ開始
//------------------------------------------------------------------------------

OnShellChanging
{
	"\0\s[0]A new look, huh? Let's check it out.\e"
}

//------------------------------------------------------------------------------
//シェルチェンジ完了
//------------------------------------------------------------------------------
OnShellChanged
{
	"\0\s[0]New look.\e"
}


//******************************************************************************
//インストール関連
//******************************************************************************

//------------------------------------------------------------------------------
//Message during installation
//------------------------------------------------------------------------------
OnInstallBegin
{
	"\s[0]Installing the %(reference[0]).\w6.\w6.\e"
}

//------------------------------------------------------------------------------
//インストール完了メッセージ
//------------------------------------------------------------------------------
OnInstallComplete
{
	_ref0 = SPLIT(reference[0],' with',2)[0] //hogehoge with hemohemo
	
	"\0\s[0]"
	--
	if _ref0 == "shell" {
		"shell"
	}
	elseif _ref0 == "ghost" {
		"ghost"
	}
	elseif _ref0 == "balloon" {
		"balloon"
	}
	elseif _ref0 == "plugin" {
		"plugin"
	}
	--
	if _ref0 == "ghost"{
		"\0\s[0]Installing someone new? Does this mean I’m being released?"
	}elseif _ref0 == "balloon"{
		"\0\s[0]A new balloon? Interesting."
	}else{
		"%(reference[1]) installation complete.\n"
	}
	--
	if basewarenameex == 'SSP' {
		_id = ''
		if _ref0 == "shell" {
			_id = 'shell'
		}
		elseif _ref0 == "ghost" {
			_id = 'ghost'
		}
		elseif _ref0 == "balloon" {
			_id = 'balloon'
		}
		
		if _id != '' {
			"Do you want me to put it to use?"
			--
			AYATEMPLATE.MenuItem("Switch to %(reference[0])","OnAYATEMPLATE.InstallChange",_id,200)
			--
			AYATEMPLATE.MenuItem("No thanks","Menu_CANCEL")
		}
	}
}

OnAYATEMPLATE.InstallChange
{
	"\![change,%(reference[0]),lastinstalled]"
}

//------------------------------------------------------------------------------
//インストール失敗メッセージ
//------------------------------------------------------------------------------
OnInstallFailure
{
	"\0\s[0]Something went wrong, I can’t do that.\e"
}

//------------------------------------------------------------------------------
//インストール拒否（他のゴーストのためのアーカイブだった）
//------------------------------------------------------------------------------
OnInstallRefuse
{
	"\0\s[0]I won't install this %(reference[0]).\e"
}


//******************************************************************************
//消滅関連
//******************************************************************************

//------------------------------------------------------------------------------
//消滅指示
//------------------------------------------------------------------------------
OnVanishSelecting
{
	"\0\s[0]What are you doing? Why?\e"
}

//------------------------------------------------------------------------------
//消滅開始
//------------------------------------------------------------------------------
OnVanishSelected
{
	if affection > AFFECTIONCAP/10{
		"\0\s[0]I thought things had been going well.\e"
	}else{
		"\0\s[1]I didn't like you much either.\e"
	}
	
}

//------------------------------------------------------------------------------
//消滅中止
//------------------------------------------------------------------------------
OnVanishCancel
{
	"\0\s[0]Don't joke around like that.\e"
}

//------------------------------------------------------------------------------
//他のゴーストが消滅して自分に切り替わった
//------------------------------------------------------------------------------
OnVanished
{
	"\0\s[0]*(Zaiga shudders.)\n\nWas that a breeze...?\e"
}


//******************************************************************************
//メールチェック
//******************************************************************************

//------------------------------------------------------------------------------
//メールチェック開始
//------------------------------------------------------------------------------
OnBIFFBegin
{
	"\0\s[0]Checking mail.\e"
}

//------------------------------------------------------------------------------
//メールチェック成功
//------------------------------------------------------------------------------
OnBIFFComplete
{
	if reference[0] == 0
	{
		//---- メールは無かった
		"\0\s[0]No new emails.\e"
	}
	else
	{
		//---- メールが届いていた
		"\0\s[0]You have %(reference[0]) new messages.\e"
	}
}

//------------------------------------------------------------------------------
//メールチェック失敗
//------------------------------------------------------------------------------
OnBIFFFailure
{
	if reference[0] == "timeout"
	{
		//---- タイムアウト
		"\0\s[0]It's taking too long. I don't think it's gonna work.\e"
	}
	elseif reference[0] == "kick"
	{
		//---- 蹴られた
		"\0\s[0]It refused to let me check.\e"
	}
	elseif reference[0] == "defect"
	{
		//---- 設定誤り
		"\0\s[0]Okay, I have no idea what's going on here. Please check your settings.\e"
	}
	else
	{
		//---- 原因不明
		"\0\s[0]It won't work. Not sure why, but...\e"
	}
}


//******************************************************************************
//ネットワーク更新
//******************************************************************************

//------------------------------------------------------------------------------
//ネットワーク更新開始
//------------------------------------------------------------------------------
OnUpdateBegin
{
	"\0\s[0]Alrighty, checking the network...\e"
}

//------------------------------------------------------------------------------
//ネットワーク更新準備完了
//------------------------------------------------------------------------------
OnUpdateReady
{
	"\0\s[0]%(TOINT(reference[0])+1) files found.\e"
}

//------------------------------------------------------------------------------
//ネットワーク更新終了
//------------------------------------------------------------------------------
OnUpdateComplete
{
	if reference[0] == "none"
	{
		//---- 更新すべきファイルが無かった
		"\0\s[0]Sorry, I can't do that.\e"
	}
	else
	{
		//---- 実際に更新が完了した
		"\0\s[0]Update complete.\e"
	}
}

//------------------------------------------------------------------------------
//ネットワーク更新失敗
//------------------------------------------------------------------------------
OnUpdateFailure
{
	if reference[0] == "timeout"
	{
		//---- タイムアウトした
		"\0\s[0]Update timed out."
	}
	elseif reference[0] == "md5 miss"
	{
		//---- MD5値が一致しなかった
		"\0\s[0]Uh, the MD5 value is messed up. You should probably tell someone about this."
	}
	else
	{
		//---- 上記以外の理由で失敗した
		"\0\s[0]%(reference[0]) kind of issue."
	}
	--
	"\n\n\0 That's why it failed.\e"
}

//------------------------------------------------------------------------------
//ネットワーク更新 ダウンロード開始
//------------------------------------------------------------------------------
OnUpdate.OnDownloadBegin
{
	"\0\s[0]%(reference[0]) downloaded.\e"
}

//------------------------------------------------------------------------------
//ネットワーク更新 MD5値照合開始
//------------------------------------------------------------------------------
OnUpdate.OnMD5CompareBegin
{
	"\0\s[0]Let's see...\w8\e"
	"\0\s[0]Is this the right value?\e"
}

//------------------------------------------------------------------------------
//ネットワーク更新 MD5値一致
//------------------------------------------------------------------------------
OnUpdate.OnMD5CompareComplete
{
	"\0\s[0]Okay, that's correct there.\e"
	"\0\s[0]Yep, that's right.\e"
}

//------------------------------------------------------------------------------
//ネットワーク更新 MD5値不一致
//------------------------------------------------------------------------------
OnUpdate.OnMD5CompareFailure
{
	"\0\s[0]MD5...?\e"
}

//******************************************************************************
//ヘッドラインセンス
//******************************************************************************

//------------------------------------------------------------------------------
//ヘッドラインセンス開始
//------------------------------------------------------------------------------




//******************************************************************************
//ファイル作成関連
//******************************************************************************

//------------------------------------------------------------------------------
//updates2.dau作成開始
//------------------------------------------------------------------------------
OnUpdatedataCreating
{
	"\0\s[0]Creating the update file...\e"
}

//------------------------------------------------------------------------------
//updates2.dau作成完了
//------------------------------------------------------------------------------
OnUpdatedataCreated
{
	"\0\s[0]That's done.\e"
}

//------------------------------------------------------------------------------
//NAR作成開始
//------------------------------------------------------------------------------
OnNarCreating
{
	"\s[0]Sure, I'll get that NAR ready for you\w6.\w6.\w6.\e"
}

//------------------------------------------------------------------------------
//NAR作成完了
//------------------------------------------------------------------------------
OnNarCreated
{
	"\0\s[0]Here's the .nar.\e"
}

//******************************************************************************
//時計合わせ
//みか (http://homepage2.nifty.com/ko-ki/) の辞書を参考にしました。感謝＞こーき氏
//******************************************************************************

//------------------------------------------------------------------------------
//時計合わせ開始
//------------------------------------------------------------------------------
OnSNTPBegin
{
	"\0\s[0]Connecting to %(reference[0]).\e"
}

//------------------------------------------------------------------------------
//時刻取得成功、比較開始
//この関数で 2008/03/25 19:15:05 のように見やすい形に作り変えます。
//詳しくはSTRFORM関数の説明を見てね！
//わからなければこのままで。
//------------------------------------------------------------------------------

SNTPCompare_StrForm
{
	_txt = SPLIT(_argv[0],',')
	STRFORM("$04d/$02d/$02d $02d:$02d:$02d",TOINT(_txt[0]),TOINT(_txt[1]),TOINT(_txt[2]),TOINT(_txt[3]),TOINT(_txt[4]),TOINT(_txt[5]))
}

OnSNTPCompare
{
	"\0\s[0]\_q/
	修正前 %(SNTPCompare_StrForm(reference[2]))\n/
	修正後 %(SNTPCompare_StrForm(reference[1]))\n/
	\_q\n"
	--
	if reference[3] == 0
	{
		"It's as it should be.\e"
	}
	else
	{
		//\6は補正実行タグ。消しちゃだめ
		"\6\0\n\s[0]%(reference[3]) corrected.\e"
	}
}

//------------------------------------------------------------------------------
//時計合わせ失敗
//------------------------------------------------------------------------------
OnSNTPFailure
{
	"\0\s[0]SNTP failure.\e"
}


//******************************************************************************
//そのほか
//******************************************************************************

//------------------------------------------------------------------------------
//ディスプレイ解像度変更
//------------------------------------------------------------------------------
OnDisplayChange
{
	//---- 変数にディスプレイ解像度と色深度に関する情報を取得
	//---- 使うかどうかは分からないがとりあえず保持しておく
	displaybpp    = reference[0]
	displaywidth  = reference[1]
	displayheight = reference[2]
}

//------------------------------------------------------------------------------
//URLドロップ
//CROW でゴーストインストーラからゴーストをインストールを始めた時にも呼ばれます
//------------------------------------------------------------------------------
OnURLDropping
{
	"\s[0]I'll get the data from %(reference[0]).\e"
}

//------------------------------------------------------------------------------
//起動時に MATERIA を検出
//------------------------------------------------------------------------------
OnEmbryoExist
{
	"\0\s[0]Ukadocs say this has something to do with materia.\e"
}

//------------------------------------------------------------------------------
//起動時に猫どりふを検出
//------------------------------------------------------------------------------
OnNekodorifExist
{
	"\0\s[0]What is a nekodori?\e"
}

//------------------------------------------------------------------------------
//Start screen saver execution.
//------------------------------------------------------------------------------
OnScreenSaverStart
{
	"\0\s[0]Screen saver start.\w8\e"
}

//------------------------------------------------------------------------------
//スクリーンセーバー実行終了
//------------------------------------------------------------------------------
OnScreenSaverEnd
{
	"\0\s[0}Later, screensaver.\e"
}
